Synchronous:
- Request-reply (synchronous) and polling methods are common means of communication between software modules
- methods reduce the performance of the system; they waste processor cycles

Asynchronous/ publish-subscribe:
- Asynchronous methods and publish-subscribe methods act as effective alternatives to address such performance related issues.

Linux uses publish-subscribe methods to communicate between modules.

In the publish-subscribe model: 
- the client (subscriber), which requires notification of a certain event, registers a callback function with the server (publisher). 
- The server informs the client whenever an event of interest occurs through the registered callback. 
- Such a model reduces the bandwidth requirement and the polling cycle requirement, 
- as client no longer needs to periodically request new data.

Notifier chain:
- this infrastructure provides an effective mechanism for inter module communication.
- Linux notifier chain and provides the necessary framework for the publish-subscribe model
- The Linux notifier chain is like a simple linked list data structure with function pointer members. 
- The function pointers hold the subscriber callback functions.
- the notifier chain callbacks are invoked either from a process context or from an interrupt/atomic context
- types of notification chains
-- Atomic
-- Blocking		
-- Raw
-- Sleepable Read-Copy Update (SRCU)

Blocking:	
- A blocking notifier chain runs in the process context
- calls in the blocking notification chain, as the name suggests, can be blocked because they run in a process contex
- Linux-USB framework uses blocking
- Linux network module uses blocking notifier chains to inform other modules of change in quality of service (QoS) value or addition of a new device.


